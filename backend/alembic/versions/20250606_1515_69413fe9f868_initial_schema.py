"""Initial schema

Revision ID: 69413fe9f868
Revises: 
Create Date: 2025-06-06 15:15:42.333335

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '69413fe9f868'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_app_config_id'), 'app_config', ['id'], unique=False)
    op.create_index(op.f('ix_app_config_key'), 'app_config', ['key'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('is_superadmin', sa.Boolean(), nullable=True),
    sa.Column('is_god_user', sa.Boolean(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('token_version', sa.Integer(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_by_user_id'), 'users', ['created_by_user_id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_last_activity'), 'users', ['last_activity'], unique=False)
    op.create_index(op.f('ix_users_last_login'), 'users', ['last_login'], unique=False)
    op.create_table('filaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('material', sa.String(), nullable=False),
    sa.Column('price_per_kg', sa.Float(), nullable=False),
    sa.Column('total_qty_kg', sa.Float(), nullable=False),
    sa.Column('min_filaments_kg', sa.Float(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('color', 'brand', 'material', 'owner_id', name='_color_brand_material_owner_uc')
    )
    op.create_index(op.f('ix_filaments_id'), 'filaments', ['id'], unique=False)
    op.create_index(op.f('ix_filaments_owner_id'), 'filaments', ['owner_id'], unique=False)
    op.create_table('password_reset_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('requested_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['processed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_password_reset_requests_email'), 'password_reset_requests', ['email'], unique=False)
    op.create_index(op.f('ix_password_reset_requests_id'), 'password_reset_requests', ['id'], unique=False)
    op.create_table('printer_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('expected_life_hours', sa.Float(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('brand', 'model', 'owner_id', name='_brand_model_owner_uc')
    )
    op.create_index(op.f('ix_printer_types_id'), 'printer_types', ['id'], unique=False)
    op.create_index(op.f('ix_printer_types_owner_id'), 'printer_types', ['owner_id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('license_uri', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('price_eur', sa.Float(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_subscriptions_owner_id'), 'subscriptions', ['owner_id'], unique=False)
    op.create_table('user_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('activity_timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('activity_metadata', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activities_activity_timestamp'), 'user_activities', ['activity_timestamp'], unique=False)
    op.create_index(op.f('ix_user_activities_activity_type'), 'user_activities', ['activity_type'], unique=False)
    op.create_index(op.f('ix_user_activities_id'), 'user_activities', ['id'], unique=False)
    op.create_index(op.f('ix_user_activities_user_id'), 'user_activities', ['user_id'], unique=False)
    op.create_table('filament_purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filament_id', sa.Integer(), nullable=False),
    sa.Column('quantity_kg', sa.Float(), nullable=False),
    sa.Column('price_per_kg', sa.Float(), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('channel', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['filament_id'], ['filaments.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filament_purchases_id'), 'filament_purchases', ['id'], unique=False)
    op.create_index(op.f('ix_filament_purchases_owner_id'), 'filament_purchases', ['owner_id'], unique=False)
    op.create_table('print_jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('packaging_cost_eur', sa.Float(), nullable=False),
    sa.Column('calculated_cogs_eur', sa.Float(), nullable=True),
    sa.Column('printer_type_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('estimated_completion_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['printer_type_id'], ['printer_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_print_jobs_owner_id'), 'print_jobs', ['owner_id'], unique=False)
    op.create_table('printers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('printer_type_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_normalized', sa.String(), nullable=False),
    sa.Column('purchase_price_eur', sa.Float(), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('working_hours', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['printer_type_id'], ['printer_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_normalized', 'owner_id', name='_printer_name_normalized_owner_uc')
    )
    op.create_index(op.f('ix_printers_id'), 'printers', ['id'], unique=False)
    op.create_index(op.f('ix_printers_owner_id'), 'printers', ['owner_id'], unique=False)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('print_time_hrs', sa.Float(), nullable=False),
    sa.Column('additional_parts_cost', sa.Float(), nullable=False),
    sa.Column('filament_weight_g', sa.Float(), nullable=False),
    sa.Column('license_id', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_owner_id'), 'products', ['owner_id'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_table('filament_usages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('filament_id', sa.Integer(), nullable=True),
    sa.Column('grams_used', sa.Float(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['filament_id'], ['filaments.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_filament_usages_owner_id'), 'filament_usages', ['owner_id'], unique=False)
    op.create_table('print_job_printers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('print_job_id', sa.UUID(), nullable=False),
    sa.Column('printer_profile_id', sa.Integer(), nullable=True),
    sa.Column('printer_type_id', sa.Integer(), nullable=True),
    sa.Column('assigned_printer_id', sa.Integer(), nullable=True),
    sa.Column('hours_each', sa.Float(), nullable=False),
    sa.Column('printer_name', sa.String(), nullable=True),
    sa.Column('printer_manufacturer', sa.String(), nullable=True),
    sa.Column('printer_model', sa.String(), nullable=True),
    sa.Column('printer_price_eur', sa.Float(), nullable=True),
    sa.Column('printer_expected_life_hours', sa.Float(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_printer_id'], ['printers.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['print_job_id'], ['print_jobs.id'], ),
    sa.ForeignKeyConstraint(['printer_type_id'], ['printer_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_print_job_printers_owner_id'), 'print_job_printers', ['owner_id'], unique=False)
    op.create_table('print_job_products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('print_job_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('items_qty', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['print_job_id'], ['print_jobs.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_print_job_products_owner_id'), 'print_job_products', ['owner_id'], unique=False)
    op.create_table('printer_usage_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('printer_id', sa.Integer(), nullable=False),
    sa.Column('print_job_id', sa.UUID(), nullable=False),
    sa.Column('hours_used', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('week_year', sa.Integer(), nullable=False),
    sa.Column('month_year', sa.Integer(), nullable=False),
    sa.Column('quarter_year', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['print_job_id'], ['print_jobs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['printer_id'], ['printers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_printer_usage_history_id'), 'printer_usage_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_printer_usage_history_id'), table_name='printer_usage_history')
    op.drop_table('printer_usage_history')
    op.drop_index(op.f('ix_print_job_products_owner_id'), table_name='print_job_products')
    op.drop_table('print_job_products')
    op.drop_index(op.f('ix_print_job_printers_owner_id'), table_name='print_job_printers')
    op.drop_table('print_job_printers')
    op.drop_index(op.f('ix_filament_usages_owner_id'), table_name='filament_usages')
    op.drop_table('filament_usages')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_owner_id'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_printers_owner_id'), table_name='printers')
    op.drop_index(op.f('ix_printers_id'), table_name='printers')
    op.drop_table('printers')
    op.drop_index(op.f('ix_print_jobs_owner_id'), table_name='print_jobs')
    op.drop_table('print_jobs')
    op.drop_index(op.f('ix_filament_purchases_owner_id'), table_name='filament_purchases')
    op.drop_index(op.f('ix_filament_purchases_id'), table_name='filament_purchases')
    op.drop_table('filament_purchases')
    op.drop_index(op.f('ix_user_activities_user_id'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_id'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_activity_type'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_activity_timestamp'), table_name='user_activities')
    op.drop_table('user_activities')
    op.drop_index(op.f('ix_subscriptions_owner_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_printer_types_owner_id'), table_name='printer_types')
    op.drop_index(op.f('ix_printer_types_id'), table_name='printer_types')
    op.drop_table('printer_types')
    op.drop_index(op.f('ix_password_reset_requests_id'), table_name='password_reset_requests')
    op.drop_index(op.f('ix_password_reset_requests_email'), table_name='password_reset_requests')
    op.drop_table('password_reset_requests')
    op.drop_index(op.f('ix_filaments_owner_id'), table_name='filaments')
    op.drop_index(op.f('ix_filaments_id'), table_name='filaments')
    op.drop_table('filaments')
    op.drop_index(op.f('ix_users_last_login'), table_name='users')
    op.drop_index(op.f('ix_users_last_activity'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_by_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_app_config_key'), table_name='app_config')
    op.drop_index(op.f('ix_app_config_id'), table_name='app_config')
    op.drop_table('app_config')
    # ### end Alembic commands ###

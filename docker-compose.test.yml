version: '3.8'

services:
  backend-api:
    image: ${REGISTRY:-ghcr.io}/${NAMESPACE:-printfarmhq}/printfarmhq-backend:${VERSION:-latest}
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        REGISTRY: ${REGISTRY:-ghcr.io}
        NAMESPACE: ${NAMESPACE:-printfarmhq}
        BASE_TAG: ${VERSION:-latest}
    container_name: printfarmhq-backend-api
    environment:
      - JWT_SECRET_KEY=test-secret-key
      - SUPERADMIN_EMAIL=admin@printfarmhq.com
      - SUPERADMIN_PASSWORD=admin123
      - SUPERADMIN_NAME=Test Admin
      - DATABASE_URL=sqlite:///./test.db
      - TESTING=true
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; sock = socket.socket(); sock.connect(('localhost', 8000)); sock.close()"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - test-network

  frontend-app:
    image: ${REGISTRY:-ghcr.io}/${NAMESPACE:-printfarmhq}/printfarmhq-frontend:${VERSION:-latest}
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REGISTRY: ${REGISTRY:-ghcr.io}
        NAMESPACE: ${NAMESPACE:-printfarmhq}
        BASE_TAG: ${VERSION:-latest}
        NEXT_PUBLIC_API_URL: /api
        DOCKER_ENV: "true"
    container_name: printfarmhq-frontend-app
    depends_on:
      backend-api:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - DOCKER_ENV=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - test-network

  backend-test:
    image: ${REGISTRY:-ghcr.io}/${NAMESPACE:-printfarmhq}/printfarmhq-backend-test:${VERSION:-latest}
    build:
      context: ./backend
      dockerfile: Dockerfile.test
      args:
        REGISTRY: ${REGISTRY:-ghcr.io}
        NAMESPACE: ${NAMESPACE:-printfarmhq}
        BASE_TAG: ${VERSION:-latest}
    container_name: printfarmhq-backend-test
    environment:
      - JWT_SECRET_KEY=test-secret-key
      - SUPERADMIN_EMAIL=admin@printfarmhq.com
      - SUPERADMIN_PASSWORD=admin123
      - SUPERADMIN_NAME=Test Admin
      - DATABASE_URL=sqlite:///./test.db
      - TESTING=true
      - PYTHONPATH=/app
    volumes:
      - ./backend/test-results:/app/test-results
    command: ["python", "-m", "pytest", "-v", "--cov=app", "--cov-report=term-missing", "--cov-report=html", "--cov-report=xml", "--junitxml=test-results/junit.xml"]
    networks:
      - test-network

  frontend-test:
    image: ${REGISTRY:-ghcr.io}/${NAMESPACE:-printfarmhq}/printfarmhq-frontend-test:${VERSION:-latest}
    build:
      context: ./frontend
      dockerfile: Dockerfile.test
      args:
        REGISTRY: ${REGISTRY:-ghcr.io}
        NAMESPACE: ${NAMESPACE:-printfarmhq}
        BASE_TAG: ${VERSION:-latest}
    container_name: printfarmhq-frontend-test
    depends_on:
      backend-api:
        condition: service_healthy
      frontend-app:
        condition: service_healthy
    environment:
      - CI=true
      - PLAYWRIGHT_BASE_URL=http://frontend-app:3000
      - NEXT_PUBLIC_API_URL=http://backend-api:8000
    volumes:
      - ./frontend/test-results:/app/test-results
      - ./frontend/playwright-report:/app/playwright-report
    command: npx playwright test --config=playwright.docker.config.ts
    networks:
      - test-network

networks:
  test-network:
    driver: bridge